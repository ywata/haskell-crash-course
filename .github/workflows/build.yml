name: Builds

defaults:
  run:
    shell: bash

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
jobs:

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        ghc: ['8.10.4']
        os: [macOS-latest, ubuntu-18.04, windows-latest]
        exclude:
          - os: windows-latest
            ghc: '8.10.2' # broken due to https://gitlab.haskell.org/ghc/ghc/-/issues/18550
          - os: windows-latest
            ghc: '8.8.4' # also fails due to segfault :(
          - os: windows-latest
            ghc: '8.8.3' # fails due to segfault
          - os: windows-latest
            ghc: '8.8.2' # fails due to error with Cabal
#        include:
#          - os: windows-latest
#            ghc: '8.10.2.2' # only available for windows and choco

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: haskell/actions/setup@v1
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: '3.4'

    - name: Set some window specific things
      if: matrix.os == 'windows-latest'
      env:
        GHC_VER: ${{ matrix.ghc }}
      run: |
        echo "EXE_EXT=.exe" >> $GITHUB_ENV
        GHC_VER=$(echo $GHC_VER | sed 's/8.10.2.2/8.10.2/g')
        echo "GHC_VERSION=$GHC_VER" >> $GITHUB_ENV

#    - name: Set some linux specific things
#      if: matrix.os == 'ubuntu-18.04'
#      env:
#        GHC_VER: ${{ matrix.ghc }}
#      run: |
#        echo "LINUX_CABAL_ARGS=--enable-executable-static --ghc-options=-split-sections" >> $GITHUB_ENV
#        echo "GHC_VERSION=$GHC_VER" >> $GITHUB_ENV

    - name: Set some macOs specific things
      if: matrix.os == 'macOS-latest'
      env:
        GHC_VER: ${{ matrix.ghc }}
      run: |
        echo "GHC_VERSION=$GHC_VER" >> $GITHUB_ENV

    - name: Build Crash Course
      # Try building it twice in case of flakey builds on Windows
      run: |
        cabal build $LINUX_CABAL_ARGS || \
        cabal build $LINUX_CABAL_ARGS -j1

    - name: Test Crash Course
      # Try building it twice in case of flakey builds on Windows
      run: |
        cabal test $LINUX_CABAL_ARGS || \
        cabal test $LINUX_CABAL_ARGS -j1
